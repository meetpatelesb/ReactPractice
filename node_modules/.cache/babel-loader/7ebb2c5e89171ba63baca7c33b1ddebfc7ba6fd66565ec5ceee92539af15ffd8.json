{"ast":null,"code":"import './UserPost.css';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserPost = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n\n// inputvalue,change value and in usestate value print in console\n// const[modelPost,showPost]= useState({\n// userId:'',\n// id:'',\n// title:'',\n// body:''\n// })\n\n//  const showUserPost = async (e) => {  \n//     // const id = e.target.id ; \n\n//                 const id = e.target.id;\n//                 console.log(id);\n\n//     await fetch(`https://jsonplaceholder.typicode.com/posts?userId=${id}`)\n//       .then((res) => res.json())\n//       .then((data) => showPost(data))\n//       .catch((err) => {\n//         console.log(err);\n//       });\n//   };\n_c = UserPost;\nvar _c;\n$RefreshReg$(_c, \"UserPost\");","map":{"version":3,"names":["Fragment","_Fragment","jsxDEV","_jsxDEV","UserPost","_c","$RefreshReg$"],"sources":["/home/meet-vaghasiya/reactPractice/awesomeapp/src/components/UserPost.js"],"sourcesContent":["import './UserPost.css';\n\n\nconst UserPost = ()=>{\n  return(\n    <>\n\n      \n    </>\n  )\n}\n\n\n\n\n\n// inputvalue,change value and in usestate value print in console\n// const[modelPost,showPost]= useState({\n// userId:'',\n// id:'',\n// title:'',\n// body:''\n// })\n\n//  const showUserPost = async (e) => {  \n//     // const id = e.target.id ; \n  \n//                 const id = e.target.id;\n//                 console.log(id);\n\n   \n   \n//     await fetch(`https://jsonplaceholder.typicode.com/posts?userId=${id}`)\n//       .then((res) => res.json())\n//       .then((data) => showPost(data))\n//       .catch((err) => {\n//         console.log(err);\n//       });\n//   };\n"],"mappings":"AAAA,OAAO,gBAAgB;AAAC,SAAAA,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGxB,MAAMC,QAAQ,GAAGA,CAAA,KAAI;EACnB,oBACED,OAAA,CAAAF,SAAA,oBAGG;AAEP,CAAC;;AAMD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAAAI,EAAA,GAnCMD,QAAQ;AAAA,IAAAC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}