{"ast":null,"code":"var _s = $RefreshSig$();\nimport './UserPost.css';\nimport React, { useState } from \"react\";\nimport { Link } from 'react-router-dom';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserPost = () => {\n  _s();\n  const [modelPost, showPost] = useState({\n    userId: '',\n    id: '',\n    title: '',\n    body: ''\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n_s(UserPost, \"EiFn0YdkSANwJIuUU6US8Y/bivk=\");\n_c = UserPost;\nexport default UserPost;\n\n// inputvalue,change value and in usestate value print in console\n\nconst showUserPost = async e => {\n  // const id = e.target.id ; \n\n  const id = e.target.id;\n  console.log(id);\n  await fetch(`https://jsonplaceholder.typicode.com/posts?userId=${id}`).then(res => res.json()).then(data => showPost(data)).catch(err => {\n    console.log(err);\n  });\n};\nvar _c;\n$RefreshReg$(_c, \"UserPost\");","map":{"version":3,"names":["React","useState","Link","Fragment","_Fragment","jsxDEV","_jsxDEV","UserPost","_s","modelPost","showPost","userId","id","title","body","_c","showUserPost","e","target","console","log","fetch","then","res","json","data","catch","err","$RefreshReg$"],"sources":["/home/meet-vaghasiya/reactPractice/awesomeapp/src/components/UserPost.js"],"sourcesContent":["import './UserPost.css';\nimport React, {  useState } from \"react\";\nimport {Link} from 'react-router-dom';\n\n\n\nconst UserPost = ()=>{\n  \n\n const[modelPost,showPost]= useState({\nuserId:'',\nid:'',\ntitle:'',\nbody:''\n})\n\n  return(\n    <>\n\n      \n    </>\n  )\n}\n\n\nexport default UserPost;\n\n\n\n\n// inputvalue,change value and in usestate value print in console\n\n\n const showUserPost = async (e) => {  \n    // const id = e.target.id ; \n  \n                const id = e.target.id;\n                console.log(id);\n\n   \n   \n    await fetch(`https://jsonplaceholder.typicode.com/posts?userId=${id}`)\n      .then((res) => res.json())\n      .then((data) => showPost(data))\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n\n"],"mappings":";AAAA,OAAO,gBAAgB;AACvB,OAAOA,KAAK,IAAKC,QAAQ,QAAQ,OAAO;AACxC,SAAQC,IAAI,QAAO,kBAAkB;AAAC,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAItC,MAAMC,QAAQ,GAAGA,CAAA,KAAI;EAAAC,EAAA;EAGpB,MAAK,CAACC,SAAS,EAACC,QAAQ,CAAC,GAAET,QAAQ,CAAC;IACrCU,MAAM,EAAC,EAAE;IACTC,EAAE,EAAC,EAAE;IACLC,KAAK,EAAC,EAAE;IACRC,IAAI,EAAC;EACL,CAAC,CAAC;EAEA,oBACER,OAAA,CAAAF,SAAA,oBAGG;AAEP,CAAC;AAAAI,EAAA,CAhBKD,QAAQ;AAAAQ,EAAA,GAARR,QAAQ;AAmBd,eAAeA,QAAQ;;AAKvB;;AAGC,MAAMS,YAAY,GAAG,MAAOC,CAAC,IAAK;EAC/B;;EAEY,MAAML,EAAE,GAAGK,CAAC,CAACC,MAAM,CAACN,EAAE;EACtBO,OAAO,CAACC,GAAG,CAACR,EAAE,CAAC;EAI3B,MAAMS,KAAK,CAAE,qDAAoDT,EAAG,EAAC,CAAC,CACnEU,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAE,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAKf,QAAQ,CAACe,IAAI,CAAC,CAAC,CAC9BC,KAAK,CAAEC,GAAG,IAAK;IACdR,OAAO,CAACC,GAAG,CAACO,GAAG,CAAC;EAClB,CAAC,CAAC;AACN,CAAC;AAAC,IAAAZ,EAAA;AAAAa,YAAA,CAAAb,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}