{"ast":null,"code":"var _jsxFileName = \"/home/meet-vaghasiya/reactPractice/awesomeapp/src/components/UserDatas.js\";\nimport \"./UserDatas.css\";\nimport React, { Fragment, useState } from \"react\";\n\n// inputvalue,change value and in usestate value print in console\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst [modelPost, showPost] = useState({\n  userId: '',\n  id: '',\n  title: '',\n  body: ''\n});\nconst showUserPost = async e => {\n  // const id = e.target.id ; \n\n  const id = e.target.id;\n  console.log(id);\n  await fetch(`https://jsonplaceholder.typicode.com/posts?userId=${id}`).then(res => res.json()).then(data => showPost(data)).catch(err => {\n    console.log(err);\n  });\n};\nconst UserDatas = props => {\n  //   console.log(typeof props.userdata);\n  //   console.log(props.userdata[0]);\n  //   console.log(Object.values(props.userdata));\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"title\",\n      children: \"User Datas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        className: \"tr\",\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"td\",\n          children: \"Id\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"td\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"td\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"td\",\n          children: \"Phone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"td\",\n          children: \"Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"td\",\n          children: \"Views\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 6\n      }, this), props.userdata.map((user, index) => {\n        {/* console.log(user.address); */}\n        return /*#__PURE__*/_jsxDEV(Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"tr\",\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"td\",\n              children: user.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"td\",\n              children: user.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"td\",\n              children: user.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"td\",\n              children: user.phone\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"td\",\n              children: [user.address.street, \",\", user.address.suite, \",\", user.address.city, \",\", user.address.zipcode]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                id: user.id,\n                value: user.id,\n                onClick: showUserPost,\n                children: \"Views\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true);\n};\n_c = UserDatas;\nexport default UserDatas;\nvar _c;\n$RefreshReg$(_c, \"UserDatas\");","map":{"version":3,"names":["React","Fragment","useState","jsxDEV","_jsxDEV","_Fragment","modelPost","showPost","userId","id","title","body","showUserPost","e","target","console","log","fetch","then","res","json","data","catch","err","UserDatas","props","children","className","fileName","_jsxFileName","lineNumber","columnNumber","userdata","map","user","index","name","email","phone","address","street","suite","city","zipcode","value","onClick","_c","$RefreshReg$"],"sources":["/home/meet-vaghasiya/reactPractice/awesomeapp/src/components/UserDatas.js"],"sourcesContent":["\nimport \"./UserDatas.css\";\nimport React, { Fragment, useState } from \"react\";\n\n\n\n// inputvalue,change value and in usestate value print in console\nconst[modelPost,showPost]= useState({\nuserId:'',\nid:'',\ntitle:'',\nbody:''\n})\n\n const showUserPost = async (e) => {  \n    // const id = e.target.id ; \n  \n                const id = e.target.id;\n                console.log(id);\n\n   \n   \n    await fetch(`https://jsonplaceholder.typicode.com/posts?userId=${id}`)\n      .then((res) => res.json())\n      .then((data) => showPost(data))\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n\n\nconst UserDatas = (props) => {\n//   console.log(typeof props.userdata);\n//   console.log(props.userdata[0]);\n//   console.log(Object.values(props.userdata));\n\n  return (\n    <>\n\n    \n    <span className=\"title\">User Datas</span>\n\n  <table className=\"table\">\n     <tr className=\"tr\">\n        <th className=\"td\">Id</th>\n        <th className=\"td\">Name</th>\n        <th className=\"td\">Email</th>\n        <th className=\"td\">Phone</th>\n        <th className=\"td\">Address</th>\n        <th className=\"td\">Views</th>\n    </tr>\n \n\n      {props.userdata.map((user,index) => {\n        {/* console.log(user.address); */}\n        return (\n          <Fragment key={index}>\n         \n            <tr className=\"tr\">\n              <td className=\"td\">{user.id}</td>\n              <td className=\"td\">{user.name}</td>\n              <td className=\"td\">{user.email}</td>\n              <td className=\"td\">{user.phone}</td>\n              <td className=\"td\">\n                {user.address.street},{user.address.suite},{user.address.city},\n                {user.address.zipcode}\n              </td>\n              <td><button id={user.id} value={user.id} onClick={showUserPost} >Views</button> \n</td>\n            </tr>\n         \n          </Fragment>\n\n        );  \n      }\n       )}\n\n   \n        </table>\n    </>\n  );\n};\n\nexport default UserDatas;\n\n     "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}